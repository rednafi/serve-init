---
- hosts: all
  become: true
  vars:
    created_username: ubuntu

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Setup passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^%sudo"
        line: "%sudo ALL=(ALL) NOPASSWD: ALL"
        validate: "/usr/sbin/visudo -cf %s"

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ created_username }}"
        state: present
        groups: sudo
        append: true
        create_home: true
        shell: /bin/bash

    - name: Set authorized key for remote user
      ansible.posix.authorized_key:
        user: "{{ created_username }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"

    - name: Update apt and install required system packages
      apt:
        pkg:
          - curl
          - micro
          - git
          - ufw
          - htop
          - neofetch
          - bash-completion
          - sqlite3
        state: latest
        update_cache: true

    - name: Copy skeleton files to new user home
      command: cp -r /etc/skel/. /home/{{ created_username }}
      become_user: "{{ created_username }}"

    - name: Ensure bash completion is sourced in .bashrc
      lineinfile:
        path: /home/{{ created_username }}/.bashrc
        regexp: '^#?if \[ -f /etc/bash_completion \]; then'
        line: "if [ -f /etc/bash_completion ]; then . /etc/bash_completion; fi"
        create: yes
      become_user: "{{ created_username }}"

    - name: UFW - Allow SSH connections
      community.general.ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Allow HTTP (port 80)
      community.general.ufw:
        rule: allow
        port: "80"
        proto: tcp

    - name: UFW - Allow HTTPS (port 443)
      community.general.ufw:
        rule: allow
        port: "443"
        proto: tcp

    - name: UFW - Enable and deny by default
      community.general.ufw:
        state: enabled
        default: deny

    - name: Create app directory for deployed application
      file:
        path: /home/{{ created_username }}/deployed_apps
        state: directory
        owner: "{{ created_username }}"
        group: "{{ created_username }}"
        mode: '0755'
